{"version":3,"sources":["App.module.css","component/MovieComponent.js","component/MovieInfoComponent.js","App.js","index.js"],"names":["module","exports","CoverImg","styled","img","MovieContainer","div","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movieData","Title","Poster","Type","Year","imdbID","onClick","onShowMovie","src","InfoComponent","SubDetails","SpanHeadDetail","SpanDetail","MovieInfoComponent","selectedMovie","alt","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","style","cursor","onMovieSelect","APIKEY","App","useState","timeOutId","setTimeoutId","setMovieData","searchQuery","updateSearchQuery","fetchData","queryString","a","axios","get","res","data","Response","Search","console","log","displayMovieDetails","id","movieDetail","className","Classes","container","header","title","MovieImg","titleName","searchBox","type","onChange","e","preventDefault","target","value","clearTimeout","clearTimoutid","setTimeout","placeholder","bind","MovieListContainer","length","map","movie","movieIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90f5dd8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3L5J5\",\"header\":\"App_header__3g1TI\",\"title\":\"App_title__3AZin\",\"MovieImg\":\"App_MovieImg__t4EsG\",\"titleName\":\"App_titleName__UvQbJ\",\"searchBox\":\"App_searchBox__29yfF\",\"MovieListContainer\":\"App_MovieListContainer__3ZqYG\",\"movieIcon\":\"App_movieIcon__-ueN8\"};","import styled from 'styled-components';\r\n\r\nconst CoverImg = styled.img`\r\n    height: 350px;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst MovieContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    width: 280px;\r\n    box-shadow: 0 3px 10px 0 #aaa;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: black;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nfunction MovieComponent(props){\r\n    const {Title, Poster, Type, Year, imdbID} = props.movieData;\r\n    return (\r\n        <MovieContainer onClick={()=>{props.onShowMovie(imdbID)}}>\r\n            <CoverImg src={Poster} />\r\n            <MovieName>{Title}</MovieName>\r\n            <InfoColumn>\r\n                <MovieInfo>Year: {Year}</MovieInfo>\r\n                <MovieInfo>Type: {Type}</MovieInfo>\r\n            </InfoColumn>\r\n        </MovieContainer>\r\n    )\r\n}\r\n\r\nexport default MovieComponent;","import styled from 'styled-components';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst InfoComponent = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 20px;\r\n    border-bottom: 1px solid #aaa;\r\n    gap:20px;\r\n`;\r\n\r\n\r\nconst SubDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    padding: 20px;\r\n`;\r\nconst SpanHeadDetail = styled.span`\r\n    padding: 8px 8px 10px 8px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n`;\r\n\r\n\r\nconst SpanDetail = styled.span`\r\n    padding: 8px;\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    & span{\r\n        opacity: 0.5;\r\n        font-weight: normal;\r\n    }\r\n`;\r\n\r\nfunction MovieInfoComponent(props){\r\n    return (\r\n        <InfoComponent>\r\n            <div></div>\r\n            <img src={props.selectedMovie.Poster} alt={props.selectedMovie.Title}/>\r\n            <SubDetails>\r\n                <SpanHeadDetail>Movie: {props.selectedMovie.Title}</SpanHeadDetail>\r\n                <SpanDetail>IMDB Rating: <span>{props.selectedMovie.imdbRating}</span></SpanDetail>\r\n                <SpanDetail>Year: <span>{props.selectedMovie.Year}</span></SpanDetail>\r\n                <SpanDetail>Language: <span>{props.selectedMovie.Language}</span></SpanDetail>\r\n                <SpanDetail>Rated: <span>{props.selectedMovie.Rated}</span></SpanDetail>\r\n                <SpanDetail>Released: <span>{props.selectedMovie.Released}</span></SpanDetail>\r\n                <SpanDetail>Runtime: <span>{props.selectedMovie.Runtime}</span></SpanDetail>\r\n                <SpanDetail>Genre: <span>{props.selectedMovie.Genre}</span></SpanDetail>\r\n                <SpanDetail>Director: <span>{props.selectedMovie.Director}</span></SpanDetail>\r\n                <SpanDetail>Actors: <span>{props.selectedMovie.Actors}</span></SpanDetail>\r\n                <SpanDetail>Plot: <span>{props.selectedMovie.Plot}</span></SpanDetail>\r\n            </SubDetails>\r\n            <CancelIcon style={{cursor: 'pointer'}} onClick={props.onMovieSelect}/>\r\n        </InfoComponent>\r\n    )\r\n}\r\n\r\nexport default MovieInfoComponent;","import Classes from \"./App.module.css\";\nimport MovieComponent from \"./component/MovieComponent\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport MovieInfoComponent from \"./component/MovieInfoComponent\";\n\nconst APIKEY = \"eada3e85\";\n\nfunction App() {\n  const [timeOutId, setTimeoutId] = useState();\n  const [movieData, setMovieData] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n  const [searchQuery, updateSearchQuery] = useState();\n\n  const fetchData = async (queryString) => {\n    if (queryString) {\n      try {\n        const res = await axios.get(\n          `https://www.omdbapi.com/?s=${queryString}&apikey=${APIKEY}`\n        );\n        if (res.data.Response === \"True\") {\n          setMovieData(res.data.Search);\n        } else {\n          setMovieData([]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const onTextChange = (e) => {\n    e.preventDefault();\n    onMovieSelect(\"\");\n    updateSearchQuery(e.target.value);\n    clearTimeout(timeOutId);\n    const clearTimoutid = setTimeout(async () => {\n      fetchData(e.target.value);\n    }, 500);\n    setTimeoutId(clearTimoutid);\n  };\n\n  const displayMovieDetails = async (id) => {\n    let movieDetail = await axios.get(\n      `https://www.omdbapi.com/?i=${id}&apikey=${APIKEY}`\n    );\n    onMovieSelect(movieDetail.data);\n  };\n\n  return (\n    <div className={Classes.container}>\n      <div className={Classes.header}>\n        <div className={Classes.title}>\n          <img\n            className={Classes.MovieImg}\n            src=\"./movie-icon.svg\"\n            alt=\"Movie_icon\"\n          />\n          <span className={Classes.titleName}>Movie App</span>\n        </div>\n        <div className={Classes.searchBox}>\n          <img src=\"./search-icon.svg\" alt=\"search_icon\" />\n          <input\n            type=\"text\"\n            onChange={onTextChange}\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n          />\n        </div>\n      </div>\n      {selectedMovie && (\n        <MovieInfoComponent\n          selectedMovie={selectedMovie}\n          onMovieSelect={onMovieSelect.bind(null, \"\")}\n        />\n      )}\n      <div className={Classes.MovieListContainer}>\n        {!movieData.length ? (\n          <div className={Classes.movieIcon}>\n            <img src=\"./movie-icon.svg\" alt=\"Movie_icon\" />\n          </div>\n        ) : (\n          movieData.map((movie, id) => (\n            <MovieComponent\n              key={id}\n              movieData={movie}\n              onShowMovie={displayMovieDetails}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}